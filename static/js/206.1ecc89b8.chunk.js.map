{"version":3,"file":"static/js/206.1ecc89b8.chunk.js","mappings":"kQACaA,EAAcC,EAAAA,EAAAA,MAAH,iLAUXC,EAAeD,EAAAA,EAAAA,OAAH,uUAkBZE,EAAaF,EAAAA,EAAAA,KAAH,iK,SCzBVG,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACE,UAACL,EAAD,CAAYM,SAbO,SAAAC,GACnBA,EAAMC,iBAEqB,KAAvBJ,EAAYK,SAIhBP,EAAUE,GAEVC,EAAe,IAChB,EAGC,WACE,SAACR,EAAD,CACEa,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,MAAOV,EACPW,SAxBoB,SAAAR,GACxBF,EAAeE,EAAMS,cAAcF,MAAMG,cAC1C,KAwBG,SAAClB,EAAD,CAAcW,KAAK,SAAnB,sBAGL,EChCYQ,EAAapB,EAAAA,EAAAA,GAAH,oFAMVqB,EAAiBrB,EAAAA,EAAAA,GAAH,gDAIdsB,GAAiBtB,EAAAA,EAAAA,GAAOuB,EAAAA,GAAPvB,CAAH,+XCmC3B,EA1Ce,WAAO,IAAD,EACnB,GAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOmB,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,GAKLK,EAAAA,EAAAA,IAAgBL,GAAWM,MAAK,SAAAC,GAC9BX,EAAkBW,EAAOC,KAAKC,QAC/B,IANCb,EAAkB,GAOrB,GAAE,CAACI,IAMJ,OACE,4BACE,SAAC1B,EAAD,CAAWC,UANG,SAAAY,GAChBY,EAA0B,KAAVZ,EAAe,CAAEuB,MAAOvB,GAAU,CAAC,EACpD,IAKIQ,EAAegB,OAAS,IACvB,SAACpB,EAAD,UACGI,EAAeiB,KAAI,SAAAC,GAAK,OACvB,SAACrB,EAAD,WACE,SAACC,EAAD,CACEqB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMf,GAFjB,SAIGW,EAAMK,kBALUL,EAAME,GADJ,QAclC,C","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 200px;\n  outline: none;\n  padding: 5px;\n  border: 2px solid orangered;\n  border-radius: 6px;\n  font-size: 20px;\n`;\n\nexport const SearchButton = styled.button`\n  text-align: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  color: orangered;\n  border-radius: 6px;\n  border: 2px solid orangered;\n  background-color: white;\n  width: 120px;\n  margin-left: 15px;\n  font-size: 20px;\n\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  padding: 15px 0px;\n  padding-top: 5px;\n  border-bottom: 2px silid orangered;\n  width: 100%;\n  border-bottom: 1px solid orangered;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchInput, SearchButton, SearchForm } from './SearchBox.styled';\n\nexport const SearchBox = ({ changeURL }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSearchQuery = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    changeURL(searchQuery);\n\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for movies\"\n        value={searchQuery}\n        onChange={handleSearchQuery}\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </SearchForm>\n  );\n};\n\nSearchBox.propTypes = {\n  changeURL: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n  width: 300px;\n`;\n\nexport const MoviesListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MoviesListLink = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: block;\n  color: black;\n  border-radius: 6px;\n  border: 1px solid orangered;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover: not(.active) {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { getMoviesByName } from '../../Services/GetMovies';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchBox } from '../../components/SearchBox/SearchBox';\nimport { MoviesList, MoviesListItem, MoviesListLink } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!queryName) {\n      setSearchedMovies([]);\n      return;\n    }\n\n    getMoviesByName(queryName).then(movies => {\n      setSearchedMovies(movies.data.results);\n    });\n  }, [queryName]);\n\n  const changeURL = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <div>\n      <SearchBox changeURL={changeURL} />\n      {searchedMovies.length > 0 && (\n        <MoviesList>\n          {searchedMovies.map(movie => (\n            <MoviesListItem key={movie.id}>\n              <MoviesListLink\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.original_title}\n              </MoviesListLink>\n            </MoviesListItem>\n          ))}\n        </MoviesList>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchInput","styled","SearchButton","SearchForm","SearchBox","changeURL","useState","searchQuery","setSearchQuery","onSubmit","event","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","MoviesList","MoviesListItem","MoviesListLink","NavLink","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","queryName","get","location","useLocation","useEffect","getMoviesByName","then","movies","data","results","query","length","map","movie","to","id","state","from","original_title"],"sourceRoot":""}