{"version":3,"file":"static/js/33.f17833b5.chunk.js","mappings":"sQAGaA,EAAmBC,EAAAA,EAAAA,IAAH,oGAOhBC,EAAiBD,EAAAA,EAAAA,IAAH,wFAMdE,EAAcF,EAAAA,EAAAA,IAAH,8CAIXG,EAAgBH,EAAAA,EAAAA,IAAH,0FAMbI,EAAaJ,EAAAA,EAAAA,EAAH,wNAYVK,GAAWL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,uaAsBRO,EAAgBP,EAAAA,EAAAA,GAAH,gKASbQ,EAAcR,EAAAA,EAAAA,GAAH,+CAIXS,GAAWT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,wb,SCMrB,EA/DqB,WAAO,IAAD,IACzB,GAAkCW,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaC,OAAON,IAAUO,MAAK,SAAAC,GAAK,OAAIT,EAAaS,EAAMC,KAAvB,GACzC,GAAE,CAACT,IAEJ,IAAsBU,EAKhBC,EAAW,oBAAGT,EAASU,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE5C,OAAKf,GAKH,iCACE,UAACX,EAAD,YACE,SAACF,EAAD,CACE6B,IAAG,yCAAoChB,EAAUiB,aACjDC,IAAI,MAEN,UAAC5B,EAAD,YACE,kCAAQU,EAAUmB,MAAlB,cAnBcP,EAoBZZ,EAAUoB,aAnBFR,EAAKS,MAAM,EAAG,IAkBxB,QAGA,yCACiBrB,EAAUsB,aAAe,GAAM,KAAKC,QAAQ,GAD7D,SAGA,uCACA,uBAAIvB,EAAUwB,YACd,SAAC5B,EAAD,uBACA,SAACL,EAAD,UACGS,EAAUyB,OAAOC,KAAI,SAAAC,GAAK,OACzB,SAACnC,EAAD,UAA4BmC,EAAMC,MAAjBD,EAAME,GADE,OAI7B,SAAChC,EAAD,CAAUiC,GAAIjB,EAAd,4BAGJ,4BACE,UAAClB,EAAD,YACE,yBACE,SAACF,EAAD,CAAUqC,GAAG,OAAOhB,MAAO,CAAEC,KAAMF,GAAnC,qBAIF,yBACE,SAACpB,EAAD,CAAUqC,GAAG,UAAUhB,MAAO,CAAEC,KAAMF,GAAtC,2BAKJ,SAAC,KAAD,UAzCG,IA6CV,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MoviePosterImage = styled.img`\n  display: block;\n  width: 300px;\n  height: auto;\n  border-radius: 8px;\n`;\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nexport const GenresWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const MovieGenre = styled.p`\n  margin-right: 10px;\n  padding: 5px;\n  border-radius: 4px;\n  color: white;\n  background-color: black;\n  width: 120px;\n  text-align: center;\n  margin-bottom: 0px;\n  margin-top: 10px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: block;\n  color: black;\n  border-radius: 6px;\n  border: 1px solid orangered;\n  width: 120px;\n  margin-right: 15px;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover: not(.active) {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const InfoLinksList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 500px;\n  list-style: none;\n  margin-bottom: 30px;\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-bottom: 0px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n  width: 100%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: block;\n  color: black;\n  border-radius: 6px;\n  border: 1px solid orangered;\n  width: 120px;\n  margin-right: 15px;\n  margin-top: 15px &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover: not(.active) {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieByID } from '../../Services/GetMovies';\n\nimport {\n  MoviePosterImage,\n  DetailsWrapper,\n  InfoWrapper,\n  GenresWrapper,\n  MovieGenre,\n  InfoLink,\n  InfoLinksList,\n  GenresTitle,\n  BackLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  useEffect(() => {\n    getMovieByID(Number(movieId)).then(movie => setMovieInfo(movie.data));\n  }, [movieId]);\n\n  const makeMovieDate = date => {\n    const fitDate = date.slice(0, 4);\n    return fitDate;\n  };\n\n  const backLinkRef = location.state?.from ?? '/';\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  return (\n    <>\n      <DetailsWrapper>\n        <MoviePosterImage\n          src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`}\n          alt=\"\"\n        />\n        <InfoWrapper>\n          <h2>{`${movieInfo.title} (${makeMovieDate(\n            movieInfo.release_date\n          )})`}</h2>\n          <p>\n            User score: {((movieInfo.vote_average / 10) * 100).toFixed(0)} %\n          </p>\n          <h3>Overveiw:</h3>\n          <p>{movieInfo.overview}</p>\n          <GenresTitle>Genres:</GenresTitle>\n          <GenresWrapper>\n            {movieInfo.genres.map(genre => (\n              <MovieGenre key={genre.id}>{genre.name}</MovieGenre>\n            ))}\n          </GenresWrapper>\n          <BackLink to={backLinkRef}>Go back</BackLink>\n        </InfoWrapper>\n      </DetailsWrapper>\n      <div>\n        <InfoLinksList>\n          <li>\n            <InfoLink to=\"cast\" state={{ from: backLinkRef }}>\n              Cast\n            </InfoLink>\n          </li>\n          <li>\n            <InfoLink to=\"reviews\" state={{ from: backLinkRef }}>\n              Reviews\n            </InfoLink>\n          </li>\n        </InfoLinksList>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MoviePosterImage","styled","DetailsWrapper","InfoWrapper","GenresWrapper","MovieGenre","InfoLink","NavLink","InfoLinksList","GenresTitle","BackLink","Link","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","useEffect","getMovieByID","Number","then","movie","data","date","backLinkRef","state","from","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","id","to"],"sourceRoot":""}