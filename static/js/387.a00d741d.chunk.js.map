{"version":3,"file":"static/js/387.a00d741d.chunk.js","mappings":"mPAEaA,EAAeC,EAAAA,EAAAA,IAAH,oGAOZC,EAAcD,EAAAA,EAAAA,IAAH,gGAMXE,EAAmBF,EAAAA,EAAAA,IAAH,oQ,kBC0B7B,EAnCa,WACX,OAAoCG,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAASI,MAAK,SAAAC,GAAQ,OACrCN,EAAcM,EAASC,KAAKC,KADS,GAGxC,GAAE,CAACP,IAECF,GAKH,SAACH,EAAD,UACGG,EAAWU,KAAI,SAAAC,GACd,OACE,UAACb,EAAD,YACE,SAACH,EAAD,CACEiB,IACED,EAAUE,aAAV,yCACsCF,EAAUE,cAC5CC,EAENC,IAAI,MAEN,uBAAIJ,EAAUK,QACd,uCAAeL,EAAUM,eAVJN,EAAUO,UAapC,MApBI,IAuBV,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorPicture = styled.img`\n  display: block;\n  width: 150px;\n  height: auto;\n  border-radius: 8px;\n`;\n\nexport const CastWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nexport const ActorInfoWrapper = styled.div`\n  width: 150px;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  padding: 0px;\n  margin-bottom: 10px;\n  border-radius: 8px;\n  text-align: center;\n  margin-right: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastByMovieId } from '../../Services/GetMovies';\nimport { ActorPicture, CastWrapper, ActorInfoWrapper } from './Cast.styled';\nimport notFound from '../../images/not-found.png';\n\nconst Cast = () => {\n  const [castActors, setCastActors] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getCastByMovieId(movieId).then(response =>\n      setCastActors(response.data.cast)\n    );\n  }, [movieId]);\n\n  if (!castActors) {\n    return null;\n  }\n\n  return (\n    <CastWrapper>\n      {castActors.map(castActor => {\n        return (\n          <ActorInfoWrapper key={castActor.credit_id}>\n            <ActorPicture\n              src={\n                castActor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${castActor.profile_path}`\n                  : notFound\n              }\n              alt=\"\"\n            />\n            <p>{castActor.name}</p>\n            <p>Character: {castActor.character}</p>\n          </ActorInfoWrapper>\n        );\n      })}\n    </CastWrapper>\n  );\n};\n\nexport default Cast;\n"],"names":["ActorPicture","styled","CastWrapper","ActorInfoWrapper","useState","castActors","setCastActors","movieId","useParams","useEffect","getCastByMovieId","then","response","data","cast","map","castActor","src","profile_path","notFound","alt","name","character","credit_id"],"sourceRoot":""}